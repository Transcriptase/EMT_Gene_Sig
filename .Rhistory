#Process Lung mRNA data to prepare for sylamer analysis
#load libraries
library("lumi")
library("lumiMouseIDMapping")
library("lumiMouseAll.db")
library("annotate")
library("mogene10stprobeset.db")
#find files
CTR_PATH <- ("M:/MRSTran/Lab Notebook/Array/Lung 2009/Raw Data/CT and CTR 6-24-09/Copy of Ptran_for JH_012710/Data/Ptran_not Normalized_Sample Probe Profile.txt")
CR_PATH <- ("M:/MRSTran/Lab Notebook/Array/Lung 2009/Raw Data/CM, CR and CMR 6-12-09/NOT Norm sample Probe Profile-061209.txt")
OTHER_DATA_PATH <- ("M:/MRSTran/Lab Notebook/Array/Lung 2009/Raw Data/CT-LSL On, CT-LSL Off and LSL 12-7-09/Not Normalized_Sample Probe Profile_120709.txt")
LIST_PATH <- ("M:/MRSTran/Lab Notebook/Array/Lung 2009/Analysis/Single set GSEA - All 3-2010/TranP_annot.txt")
file_list <- c(CTR_PATH, CR_PATH, OTHER_DATA_PATH)
x.lumi <- lumiR.batch(file_list, lib.mapping = "lumiMouseIDMapping", sampleInfoFile = LIST_PATH)
lumi.T <- lumiT(x.lumi, method = "log2")
dataMatrix <- exprs(lumi.T)
presentCount <- detectionCall(lumi.T)
selDataMatrix <- dataMatrix[presentCount > 0,]
probeList <- rownames(selDataMatrix)
annot <- as.data.frame(read.table(LIST_PATH, header = TRUE))
rownames(annot) <- annot[,"ID"]
trimAnnot <- annot[which(rownames(annot)%in%colnames(selDataMatrix)),]
exp <- factor(trimAnnot[,"group"])
names(exp) <- trimAnnot[,"ID"]
design <- model.matrix(~0 + exp)
source("http://bioconductor.org/biocLite.R")
biocLite(c("lumi", "lumiMouseIDMapping, lumiMouseAll.db"))
library("lumi")
library("lumiMouseIDMapping")
library("lumiMouseAll.db")
library("annotate")
library("mogene10stprobeset.db")
file_list <- c(CTR_PATH, CR_PATH, OTHER_DATA_PATH)
x.lumi <- lumiR.batch(file_list, lib.mapping = "lumiMouseIDMapping", sampleInfoFile = LIST_PATH)
lumi.T <- lumiT(x.lumi, method = "log2")
biocLite("nleqslv")
library("lumi")
library("lumiMouseIDMapping")
library("lumiMouseAll.db")
library("annotate")
library("mogene10stprobeset.db")
x.lumi <- lumiR.batch(file_list, lib.mapping = "lumiMouseIDMapping", sampleInfoFile = LIST_PATH)
lumi.T <- lumiT(x.lumi, method = "log2")
library("lumi")
library("lumiMouseIDMapping")
library("lumiMouseAll.db")
library("annotate")
library("mogene10stprobeset.db")
#find files
CTR_PATH <- paste(getwd(),
"/Raw Lung Data/Ptran_not Normalized_Sample Probe Profile.txt",
sep = "")
CR_PATH <- paste(getwd(),
"/Raw Lung Data/NOT Norm sample Probe Profile-061209.txt",
sep ="")
OTHER_DATA_PATH <- paste(getwd(),
"/Raw Lung Data/Not Normalized_Sample Probe Profile_120709.txt",
sep = "")
LIST_PATH <- paste(getwd(),
"/Raw Lung Data/TranP_annot.txt",
sep = "")
file_list <- c(CTR_PATH, CR_PATH, OTHER_DATA_PATH)
x.lumi <- lumiR.batch(file_list, lib.mapping = "lumiMouseIDMapping", sampleInfoFile = LIST_PATH)
lumi.T <- lumiT(x.lumi, method = "log2")
setwd("C:/Documents and Settings/rwill127/My Documents/GitHub/EMT_Gene_Sig")
#find files
CTR_PATH <- paste(getwd(),
"/Raw Lung Data/Ptran_not Normalized_Sample Probe Profile.txt",
sep = "")
CR_PATH <- paste(getwd(),
"/Raw Lung Data/NOT Norm sample Probe Profile-061209.txt",
sep ="")
OTHER_DATA_PATH <- paste(getwd(),
"/Raw Lung Data/Not Normalized_Sample Probe Profile_120709.txt",
sep = "")
LIST_PATH <- paste(getwd(),
"/Raw Lung Data/TranP_annot.txt",
sep = "")
file_list <- c(CTR_PATH, CR_PATH, OTHER_DATA_PATH)
x.lumi <- lumiR.batch(file_list, lib.mapping = "lumiMouseIDMapping", sampleInfoFile = LIST_PATH)
lumi.T <- lumiT(x.lumi, method = "log2")
biocLite("lumiMouseIDMapping")
biocLite("lumiMouseAll.db")
detach("package:AnnotationDbi", unload=TRUE)
x.lumi <- lumiR.batch(file_list, lib.mapping = "lumiMouseIDMapping", sampleInfoFile = LIST_PATH)
lumi.T <- lumiT(x.lumi, method = "log2")
dataMatrix <- exprs(lumi.T)
presentCount <- detectionCall(lumi.T)
selDataMatrix <- dataMatrix[presentCount > 0,]
probeList <- rownames(selDataMatrix)
annot <- as.data.frame(read.table(LIST_PATH, header = TRUE))
rownames(annot) <- annot[,"ID"]
batch <- c(rep("A", 16), rep("B", 8), rep("C", 8))
trimAnnot <- annot[which(rownames(annot)%in%colnames(selDataMatrix)),]
trimAnnot$batch <- batch
batch.trts <- factor(trimAnnot[,"batch"])
names(batch) <- trimAnnot[,"ID"]
exp <- factor(trimAnnot[,"group"])
names(exp) <- trimAnnot[,"ID"]
hk.trts <- rep(0, ncol(selDataMatrix))
names(hk.trts) <- colnames(selDataMatrix)
fix(hk.trts)
fix(hk.trts)
fix(probeList)
?avereps
library("limma")
View(selDataMatrix)
?lumiMouseIDMapping
ls("package:lumiMouseIDMapping")
?lumiMouseIDMapping_nuID
lumiMouseIDMapping_nuID()
selDataMatrix$Symbol
?lumiR.batch
??"nuID"
mapping_info <- nuID2RefSeqID(probelist, lib.mapping='lumiMouseIDMapping', returnAllInfo = TRUE)
mapping_info <- nuID2RefSeqID(probeList,
lib.mapping='lumiMouseIDMapping',
returnAllInfo = TRUE)
head(mapping_info)
mapping_info[mapping_info$Symbol == "Lypd2"]
View(mapping_info)
mapping_info <- as.data.frame(nuID2RefSeqID(probeList,
lib.mapping='lumiMouseIDMapping',
returnAllInfo = TRUE))
mapping_info[mapping_info$Symbol == "Lypd2"]
mapping_info[which(mapping_info$Symbol == "Lypd2")]
which(mapping_info$Symbol == "Gapdh")
mapping_info[which(mapping_info$Symbol == "Gapdh")]
mapping_info[,which(mapping_info$Symbol == "Gapdh")]
mapping_info[which(mapping_info$Symbol == "Gapdh"),]
